pipeline {

    //agent any
    agent {
        label 'node-22'
    }

    environment {
        // Project specific variables
        PROJID = 'local-project'
        DEV = 'DEV'
        SIT = 'SIT'
        UAT = 'UAT'
        PRD = 'PROD'
        BRANCH = 'sit'
        ENV_BRANCH  = "${appenv}"
        REL_VERSION = "${rversion}"

        REDEPLOY_FROM_ERROR_FLAG = 'Deployment Failed'
        REDEPLOY_ARTIFACT_FLAG = 'Redeploy'
        JIRA_TRANSTATUS = "${transtatus}"

        //For Release to UAT and PROD
        GIT_URL = 'https://github.com/lephat08/jenkins-k8s.git'
        CRED_ID = 'GITHUB-SSH-KEY'

    }

    stages {

        stage('Setup Parameters') {
            steps {
                script {

                    properties([
                        parameters([
                            choice(
                                choices: ['main','dev'], 
                                description: 'Application Branch', 
                                name: 'APPENV'
                            )
                        ])
                    ])

                    git branch: "${APPENV}",url: "${GIT_URL}"
                    //stash includes: '**/*', name: 'WSPC'
                }
            }
        }


        stage('Build source') {

            steps {
                script {

                    dir('nextjs-blog'){
                        echo 'Install dependencies'
                        sh 'npm install --loglevel verbose --no-audit'

                        if ("${ENV_BRANCH}" == "${APPENV}") {
                            sh 'npm run build'

                        } else {
                            sh 'npm run build'                    
                        }
                        sh 'ls -alht'
                        // sh 'mv ./build/index.html ./build/en.html'


                    }
                }
                archiveArtifacts artifacts: 'build', allowEmptyArchive: true
            }
        }
        
        stage('Build Image'){
            agent {
                label 'podman-agent'
            }
            steps{
                script {
                    //unstash 'WSPC'
                    sh 'podman version'
                    dir('nextjs-blog'){
                        sh '''
                            ls -alh
                            podman image build \
                                --cgroup-manager=cgroupfs \
                                -t docker.io/jamehunt08/nextjs-blog:version-${BUILD_NUMBER} . --no-cache

                            podman image list
                        '''
                        
                        
                    }
                }
            }
        }
        
        stage('Push Image'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'dockerhub_id', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                    script {
                        sh('podman login -u ${NEXUS_USER} -p ${NEXUS_PASS} ${REGISTRY_URL}')

                        sh('podman image push docker.io/jamehunt08/nextjs-blog:version-${BUILD_NUMBER}')
                    }
                }
            }
        }

    }

    post {
        success {
            script {
                if ("${ENV_BRANCH}" == "${APPENV}") {
                    currentBuild.description = "Build ${BUILD_NUMBER}: Deployment succeeded in ${ENV_BRANCH}.\n"  
                }     
            }
        }

        failure {
            script {
                if ("${ENV_BRANCH}" == "${APPENV}") {
                    currentBuild.description = "Build ${BUILD_NUMBER}: Deployment failed in ${ENV_BRANCH}, Click on \"Build URL\" below to check the error.\n"
                }      
            }
        }

        unstable {
            script {
                if ("${ENV_BRANCH}" == "${APPENV}") {
                    currentBuild.description = "[W] Security/Quality Gate Violations\nPlease Check SONARQUBE/NEXUS IQ/FORTIFY\n"
                }
            }
        }

        always {
            echo "Clean up workspace!!!!!!!!!!!!!!!"
            //deleteDir()
        }
    }

}